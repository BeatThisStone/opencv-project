import cv2
import time
import numpy as np
from time import sleep

#Definisco la soglia di pixel minima per considerare l'area rilevata come Vittima Gialla
Soglia_Vittima_Gialla=10000

cap=cv2.VideoCapture(0)
#cap.set(cv2.CAP_PROP_BUFFERSIZE, 2) # Più efficiente di 1 solo frame alla volta in memoria

# Generalmente la cattura avviene comunque a 640X480 anziché 1920X1080 che è il massimo per il modello di telecamera usato 
cap.set(3, 640)
cap.set(4, 480)

print("Test Riconoscimento Vittime Con Telecamera 1")
print("Premi 'q' Per Terminare")
sleep(2)

while cv2.waitKey(1)!=ord('q'): # Premere q per terminare

    InizioRilevamento=time.time()
     
    ret, frame=cap.read()
        
    hsv=cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    # Definisco il range per il colore GIALLO in HSV
    lower_yellow=np.array([20,50,0])
    upper_yellow=np.array([40,255,255])           

    lower_red = np.array([0, 50,100])
    upper_red= np.array([10,255,255])           
    
    # Threshold per immagini HSV per ottenere solo colori gialli
    maskY=cv2.inRange(hsv, lower_yellow, upper_yellow)
    frame_finaleGiallo=cv2.bitwise_and(frame,frame,mask=maskY)

    Conta_Pixel_Gialli= cv2.countNonZero(maskY)

    maskY=cv2.inRange(hsv, lower_red, upper_red)
    frame_finaleRosso=cv2.bitwise_and(frame,frame,mask=maskY)
    
    Conta_Pixel_Rossi = cv2.countNonZero(maskY)

    cv2.imshow('Rosso',frame_finaleRosso)
    cv2.imshow('Giallo', frame_finaleGiallo) 


    TempoRiconoscimento=time.time()-InizioRilevamento
    print ('Tempo Elaborazione Frame', round(TempoRiconoscimento,4), ' secondi - Pixel Gialli->', Conta_Pixel_Gialli)
    print ('Tempo Elaborazione Frame', round(TempoRiconoscimento,4), ' secondi - Pixel Rossi->', Conta_Pixel_Rossi)
    sleep(0.1)
    if Conta_Pixel_Gialli > Soglia_Vittima_Gialla:
        print('Vittima Gialla Riconosciuta')
    if Conta_Pixel_Rossi > Soglia_Vittima_Gialla:
        print('Vittima Rossa Riconosciuta')
        
# Rilascia gli oggetti e termina le operazioni video
cap.release()
cv2.destroyAllWindows()
    
